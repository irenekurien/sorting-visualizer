{"version":3,"sources":["utils/delay.js","algorithms/insertionSort.js","algorithms/selectionSort.js","algorithms/bubbleSort.js","utils/randomize.js","utils/constants.js","components/menu/Menu.js","components/visualizer/Bars.js","components/visualizer/Frame.js","App.js","index.js"],"names":["delay","ms","a","Promise","resolve","setTimeout","insertionSort","array","setArray","setColorsArray","sortingSpeed","len","length","newColorsArray","Array","fill","i","key","j","concat","selectionSort","min","t","bubbleSort","generateRandomArray","size","randomizedArray","push","Math","floor","random","GENERIC","algorithms","MenuApp","setSize","randomArray","setRandomArray","setMaxEl","currentAlgorithm","useState","setSortingSpeed","isSorting","setIsSorting","updateState","newRandomArray","max","algorithmAndSortHandler","event","target","textContent","className","props","onClick","disabled","htmlFor","onChange","value","type","defaultValue","map","algorithm","index","Bars","height","width","code","color","style","background","margin","Home","maxEl","colorsArray","Menu","display","flexDirection","alignItems","item","App","Frame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889447c5.chunk.js","sourcesContent":["export const delay= async (ms) => {\n    return await new Promise(resolve => setTimeout(resolve, ms));\n}","import { delay } from \"../utils/delay\";\n\nexport const insertionSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  sortingSpeed,\n} = {}) => {\n  let len = array.length;\n  let newColorsArray = new Array(len).fill(0);\n\n  for (let i = 1; i < len; i++) {\n    let key = array[i];\n    let j = i - 1;\n\n    while (j >= 0 && array[j] > key) {\n      newColorsArray[i] = 3;\n      newColorsArray[j] = 2;\n      newColorsArray[j + 1] = 1;\n\n      await delay(sortingSpeed);\n\n      setColorsArray(newColorsArray);\n\n      array[j + 1] = array[j];\n      array[j] = key;\n      array = array.concat();\n\n      newColorsArray = new Array(i).fill(3);\n      setArray(array);\n      j--;\n    }\n  }\n};\n","import { delay } from \"../utils/delay\";\n\nexport const selectionSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  sortingSpeed,\n}) => {\n  let len = array.length;\n\n  for (let i = 0; i < len; i++) {\n    let min = i;\n\n    for (let j = i + 1; j < len; j++) {\n      let newColorsArray = new Array(i)\n        .fill(3)\n        .concat(new Array(len - 1).fill(0));\n      newColorsArray[min] = 1;\n      newColorsArray[j] = 2;\n      newColorsArray[i] = 3;\n\n      await delay(sortingSpeed);\n\n      setColorsArray(newColorsArray);\n\n      if (array[min] > array[j]) {\n        min = j;\n      }\n    }\n\n    let t = array[i];\n    array[i] = array[min];\n    array[min] = t;\n\n    setArray(array);\n  }\n};\n","import { delay } from \"../utils/delay\";\n\nexport const bubbleSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  sortingSpeed,\n}) => {\n  let len = array.length;\n\n  for (let i = 0; i < len - 1; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      let newColorsArray = new Array(len - i)\n        .fill(0)\n        .concat(new Array(i).fill(3));\n      newColorsArray[j + 1] = 1;\n      newColorsArray[j] = 2;\n      newColorsArray[len - i] = 3;\n\n      await delay(sortingSpeed);\n\n      setColorsArray(newColorsArray);\n\n      if (array[j + 1] < array[j]) {\n        let t = array[j + 1];\n        array[j + 1] = array[j];\n        array[j] = t;\n      }\n    }\n    setArray(array);\n  }\n};\n","const generateRandomArray = (size) => {\n  let randomizedArray = [];\n\n  for (let i = 0; i < size; i++) {\n    randomizedArray.push(Math.floor(Math.random() * 100));\n  }\n  return randomizedArray;\n};\n\nexport default generateRandomArray;\n","const BUBBLE = \"BUBBLE SORT\";\nconst SELECTION = \"SELECTION SORT\";\nconst INSERTION = \"INSERTION SORT\";\nconst MERGE = \"MERGE SORT\";\nconst QUICK = \"QUICK SORT\";\n\nexport const GENERIC = \"#f2edd7\";\nexport const PIVOT = \"#99154e\";\nexport const SWAP = \"#ffc93c\";\nexport const KEY = \"#ffb26b\";\nexport const LAST = \"0000ff\";\n\nexport const algorithms = [QUICK, MERGE, INSERTION, SELECTION, BUBBLE];\n","import React, { useState } from \"react\";\nimport { insertionSort } from \"../../algorithms/insertionSort\";\nimport { selectionSort } from \"../../algorithms/selectionSort\";\nimport { bubbleSort } from \"../../algorithms/bubbleSort\";\nimport generateRandomArray from \"../../utils/randomize\";\nimport { algorithms } from \"../../utils/constants\";\nimport \"./menuStyles.scss\";\n\nconst MenuApp = ({\n  setSize,\n  randomArray,\n  setRandomArray,\n  setColorsArray,\n  setMaxEl,\n}) => {\n  let size = randomArray.length;\n  let currentAlgorithm = algorithms[4];\n\n  let [sortingSpeed, setSortingSpeed] = useState(1000);\n  let [isSorting, setIsSorting] = useState(false);\n\n  const updateState = (newRandomArray) => {\n    setIsSorting(false);\n    setSize(newRandomArray.length);\n    setRandomArray(newRandomArray);\n    setMaxEl(Math.max(...newRandomArray));\n    setColorsArray(new Array(newRandomArray.length).fill(0));\n  };\n\n  const algorithmAndSortHandler = async (event) => {\n    currentAlgorithm = event.target.textContent;\n    event.target.className = \"menu-button text toggle\";\n    setIsSorting(true);\n\n    const props = {\n      array: randomArray,\n      setArray: setRandomArray,\n      setColorsArray: setColorsArray,\n      sortingSpeed: sortingSpeed,\n    };\n\n    switch (currentAlgorithm) {\n      case algorithms[2]:\n        await insertionSort(props);\n        break;\n      case algorithms[3]:\n        await selectionSort(props);\n        break;\n      case algorithms[4]:\n        await bubbleSort(props);\n        break;\n      default:\n        break;\n    }\n\n    event.target.className = \"menu-button text\";\n    const newColorsArray = new Array(size).fill(3);\n    setColorsArray(newColorsArray);\n    setIsSorting(false);\n  };\n\n  const generateRandomBtnHandler = () => {\n    const newRandomArray = generateRandomArray(size);\n    updateState(newRandomArray);\n  };\n\n  const changeArraySizeHandler = (event) => {\n    const newRandomArray = generateRandomArray(event.target.value);\n    updateState(newRandomArray);\n  };\n\n  const changeSpeedHandler = (event) => {\n    setSortingSpeed(250 - event.target.value);\n  };\n\n  return (\n    <section className=\"menu\">\n      <button\n        onClick={generateRandomBtnHandler}\n        className=\"menu-button text\"\n        disabled={isSorting}\n      >\n        Generate New Array\n      </button>\n      <div className=\"range\">\n        <label className=\"text\" htmlFor=\"array-size\">\n          Change array size\n        </label>\n        <input\n          onChange={changeArraySizeHandler}\n          className=\"menu-range\"\n          type=\"range\"\n          min=\"8\"\n          max=\"250\"\n          defaultValue={size}\n          disabled={isSorting}\n        />\n      </div>\n      <div className=\"range\">\n        <label className=\"text\" htmlFor=\"array-size\">\n          Change speed\n        </label>\n        <input\n          onChange={changeSpeedHandler}\n          className=\"menu-range\"\n          type=\"range\"\n          min=\"8\"\n          max=\"250\"\n          defaultValue={size}\n          disabled={isSorting}\n        />\n      </div>\n      <div>\n        {algorithms.map((algorithm, index) => {\n          return (\n            <button\n              key={index}\n              onClick={algorithmAndSortHandler}\n              className=\"menu-button text\"\n              disabled={isSorting}\n            >\n              {algorithm}\n            </button>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default MenuApp;\n","import React from \"react\";\nimport { GENERIC, PIVOT, SWAP, KEY } from \"../../utils/constants\";\n\nconst Bars = ({ height, width, code}) => {\n  let color = GENERIC;\n\n    switch (code) {\n      case 1:\n        color = PIVOT;\n        break;\n      case 2:\n        color = SWAP;\n        break;\n      case 3:\n        color = KEY;\n        break;\n      default:\n        color = GENERIC;\n    }\n\n  return (\n    <div\n      style={{\n        height: `${height}%`,\n        width: `calc((80vw/${width}) - 4px)`,\n        background: `${color}`,\n        margin: \"0 2px\",\n      }}\n    ></div>\n  );\n};\n\nexport default Bars;\n","import React, { useState } from \"react\";\nimport Menu from \"../menu/Menu\";\nimport generateRandomArray from \"../../utils/randomize\";\nimport Bar from \"./Bars\";\n\nconst Home = () => {\n  let [size, setSize] = useState(50);\n  let [randomArray, setRandomArray] = useState(generateRandomArray(size));\n  let [maxEl, setMaxEl] = useState(Math.max(...randomArray));\n\n  let [colorsArray, setColorsArray] = useState(new Array(size).fill(0));\n\n  return (\n    <div>\n      <Menu\n        setSize={setSize}\n        randomArray={randomArray}\n        setRandomArray={setRandomArray}\n        setColorsArray={setColorsArray}\n        setMaxEl={setMaxEl}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          height: \"80vh\",\n          width: \"80vw\",\n          margin: \"20px auto\",\n          flexDirection: \"row\",\n          alignItems: \"end\",\n        }}\n      >\n        {randomArray.map((item, index) => {\n          const height = Math.max(1, (item / maxEl) * 100);\n          return (\n            <div\n              key={index}\n              style={{ height: \"100%\", display: \"flex\", alignItems: \"end\" }}\n            >\n              <Bar code={colorsArray[index]} height={height} width={size} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import Frame from \"./components/visualizer/Frame\";\n\nimport \"./app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Frame />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}