{"version":3,"sources":["utils/delay.js","algorithms/selectionSort.js","algorithms/bubbleSort.js","utils/randomize.js","utils/constants.js","components/menu/Menu.js","components/visualizer/Bars.js","components/visualizer/Frame.js","App.js","index.js"],"names":["delay","ms","a","Promise","resolve","setTimeout","selectionSort","array","setArray","setColorsArray","visualizationSpeed","len","length","i","minIndex","j","newColorsArray","Array","fill","temp","bubbleSort","generateRandomArray","size","randomizedArray","push","Math","floor","random","GENERIC","algorithms","MenuApp","setSize","randomArray","setRandomArray","setMaxEl","currentAlgorithm","useState","setVisualizationSpeed","updateState","newRandomArray","max","algorithmAndSortHandler","event","target","textContent","className","props","onClick","htmlFor","onChange","value","type","min","defaultValue","map","algorithm","index","Bars","height","width","code","color","style","background","margin","Home","maxEl","colorsArray","Menu","display","flexDirection","alignItems","item","App","Frame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.065e9184.chunk.js","sourcesContent":["export const delay= async (ms) => {\n    return await new Promise(resolve => setTimeout(resolve, ms));\n}","import { delay } from \"../utils/delay\";\n\nexport const selectionSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n}) => {\n  let len = array.length;\n\n  for (let i = 0; i < len; i++) {\n    let minIndex = i;\n\n    for (let j = i + 1; j < len; j++) {\n      const newColorsArray = new Array(len).fill(0);\n      newColorsArray[minIndex] = 1;\n      newColorsArray[j] = 2;\n      newColorsArray[i] = 3;\n      \n      await delay(visualizationSpeed);\n\n      setColorsArray(newColorsArray);\n\n      if (array[minIndex] > array[j]) {\n        minIndex = j;\n      }\n    }\n\n    let temp = array[i];\n    array[i] = array[minIndex];\n    array[minIndex] = temp;\n\n    setArray(array);\n  }\n};\n","import { delay } from \"../utils/delay\";\n\nexport const bubbleSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n}) => {\n  let len = array.length;\n\n  for (let i = 0; i < len - 1; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      const newColorsArray = new Array(len).fill(0);\n      newColorsArray[j + 1] = 1;\n      newColorsArray[j] = 2;\n      newColorsArray[len - 1 - i] = 3;\n\n      await delay(visualizationSpeed);\n\n      setColorsArray(newColorsArray);\n\n      if (array[j + 1] < array[j]) {\n        let temp = array[j + 1];\n        array[j + 1] = array[j];\n        array[j] = temp;\n      }\n    }\n    setArray(array);\n  }\n};\n","const generateRandomArray = (size) => {\n  let randomizedArray = [];\n\n  for (let i = 0; i < size; i++) {\n    randomizedArray.push(Math.floor(Math.random() * 100));\n  }\n  return randomizedArray;\n};\n\nexport default generateRandomArray;\n","const BUBBLE = \"BUBBLE SORT\";\nconst SELECTION = \"SELECTION SORT\";\nconst HEAP = \"HEAP SORT\";\nconst MERGE = \"MERGE SORT\";\nconst QUICK = \"QUICK SORT\";\n\nexport const GENERIC = \"#f2edd7\";\nexport const PIVOT = \"#99154e\";\nexport const SWAP = \"#ffc93c\";\nexport const KEY = \"#ffb26b\";\n\nexport const algorithms = [QUICK, MERGE, HEAP, SELECTION, BUBBLE];\n","import React, { useState } from \"react\";\n\nimport { selectionSort } from \"../../algorithms/selectionSort\";\nimport { bubbleSort } from \"../../algorithms/bubbleSort\";\nimport generateRandomArray from \"../../utils/randomize\";\nimport { algorithms } from \"../../utils/constants\";\nimport \"./menuStyles.scss\";\n\nconst MenuApp = ({\n  setSize,\n  randomArray,\n  setRandomArray,\n  setColorsArray,\n  setMaxEl,\n}) => {\n  let size = randomArray.length;\n  let currentAlgorithm = algorithms[4];\n\n  let [visualizationSpeed, setVisualizationSpeed] = useState(1000);\n\n  const updateState = (newRandomArray) => {\n    setSize(newRandomArray.length);\n    setRandomArray(newRandomArray);\n    setMaxEl(Math.max(...newRandomArray));\n    setColorsArray(new Array(newRandomArray.length).fill(0));\n  };\n\n  const algorithmAndSortHandler = async (event) => {\n    currentAlgorithm = event.target.textContent;\n    event.target.className = \"menu-button text toggle\";\n\n    const props = {\n      array: randomArray,\n      setArray: setRandomArray,\n      setColorsArray: setColorsArray,\n      visualizationSpeed: visualizationSpeed,\n    };\n\n    switch (currentAlgorithm) {\n      case algorithms[3]:\n        await selectionSort(props);\n        break;\n      case algorithms[4]:\n        await bubbleSort(props);\n        break;\n      default:\n        break;\n    }\n\n    event.target.className = \"menu-button text\";\n    const newColorsArray = new Array(size).fill(3);\n    setColorsArray(newColorsArray);\n  };\n\n  const generateRandomBtnHandler = () => {\n    const newRandomArray = generateRandomArray(size);\n    updateState(newRandomArray);\n  };\n\n  const changeArraySizeHandler = (event) => {\n    const newRandomArray = generateRandomArray(event.target.value);\n    updateState(newRandomArray);\n  };\n\n  const changeSpeedHandler = (event) => {\n    setVisualizationSpeed(250 - event.target.value);\n  };\n\n  return (\n    <section className=\"menu\">\n      <button onClick={generateRandomBtnHandler} className=\"menu-button text\">\n        Generate New Array\n      </button>\n      <div className=\"range\">\n        <label className=\"text\" htmlFor=\"array-size\">\n          Change array size\n        </label>\n        <input\n          onChange={changeArraySizeHandler}\n          className=\"menu-range\"\n          type=\"range\"\n          min=\"8\"\n          max=\"250\"\n          defaultValue={size}\n        />\n      </div>\n      <div className=\"range\">\n        <label className=\"text\" htmlFor=\"array-size\">\n          Change speed\n        </label>\n        <input\n          onChange={changeSpeedHandler}\n          className=\"menu-range\"\n          type=\"range\"\n          min=\"8\"\n          max=\"250\"\n          defaultValue={size}\n        />\n      </div>\n      <div>\n        {algorithms.map((algorithm, index) => {\n          return (\n            <button\n              key={index}\n              onClick={algorithmAndSortHandler}\n              className=\"menu-button text\"\n            >\n              {algorithm}\n            </button>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default MenuApp;\n","import React from \"react\";\nimport { GENERIC, PIVOT, SWAP, KEY } from \"../../utils/constants\";\n\nconst Bars = ({ height, width, code}) => {\n  let color = GENERIC;\n\n    switch (code) {\n      case 1:\n        color = PIVOT;\n        break;\n      case 2:\n        color = SWAP;\n        break;\n      case 3:\n        color = KEY;\n        break;\n      default:\n        color = GENERIC;\n    }\n\n  return (\n    <div\n      style={{\n        height: `${height}%`,\n        width: `calc((80vw/${width}) - 4px)`,\n        background: `${color}`,\n        margin: \"0 2px\",\n      }}\n    ></div>\n  );\n};\n\nexport default Bars;\n","import React, { useState } from \"react\";\nimport Menu from \"../menu/Menu\";\nimport generateRandomArray from \"../../utils/randomize\";\nimport Bar from \"./Bars\";\n\nconst Home = () => {\n  let [size, setSize] = useState(50);\n  let [randomArray, setRandomArray] = useState(generateRandomArray(size));\n  let [maxEl, setMaxEl] = useState(Math.max(...randomArray));\n\n  let [colorsArray, setColorsArray] = useState(new Array(size).fill(0));\n\n  return (\n    <div>\n      <Menu\n        setSize={setSize}\n        randomArray={randomArray}\n        setRandomArray={setRandomArray}\n        setColorsArray={setColorsArray}\n        setMaxEl={setMaxEl}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          height: \"80vh\",\n          width: \"80vw\",\n          margin: \"0 auto\",\n          flexDirection: \"row\",\n          alignItems: \"end\",\n        }}\n      >\n        {randomArray.map((item, index) => {\n          const height = (item / maxEl) * 100;\n          return (\n            <div\n              key={index}\n              style={{ height: \"100%\", display: \"flex\", alignItems: \"end\" }}\n            >\n              <Bar code={colorsArray[index]} height={height} width={size} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import Frame from \"./components/visualizer/Frame\";\n\nimport \"./app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Frame />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}